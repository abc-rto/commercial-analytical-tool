{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Des Brennan\\\\sources\\\\commercial-tool\\\\commercial-analytical-tool\\\\client\\\\src\\\\components\\\\DataTable.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: 'id',\n  headerName: 'id'\n}, {\n  field: 'name',\n  headerName: 'name'\n}, {\n  field: 'ref',\n  headerName: 'reference'\n}]; // const rows = [\n//   { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n//   { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n//   { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n//   { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n//   { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: 2 },\n//   { id: 6, lastName: 'Melisandre', firstName: 'dave', age: 150 },\n//   { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n//   { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n//   { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n// ];\n// const rows = []\n\nexport default function DataTable(props) {\n  _s();\n\n  const [selectionModel, setSelectionModel] = React.useState([]);\n\n  const onSelectionChange = item => {\n    item.api.current.getSelectedRows();\n    console.log(selectionModel);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400,\n      width: 500\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: props.rows,\n      columns: columns,\n      pageSize: 10,\n      checkboxSelection: true,\n      checkboxSelection: true,\n      selectionModel: selectionModel,\n      onSelectionModelChange: selection => {\n        const newSelectionModel = selection.selectionModel;\n\n        if (newSelectionModel.length > 1) {\n          const selectionSet = new Set(selectionModel);\n          const result = newSelectionModel.filter(s => !selectionSet.has(s));\n          setSelectionModel(result);\n        } else {\n          setSelectionModel(newSelectionModel);\n        }\n      },\n      onRowSelected: onSelectionChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DataTable, \"VRAD9iuGlUzzKqfk/iBK01pK02E=\");\n\n_c = DataTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"sources":["C:/Users/Des Brennan/sources/commercial-tool/commercial-analytical-tool/client/src/components/DataTable.js"],"names":["React","DataGrid","columns","field","headerName","DataTable","props","selectionModel","setSelectionModel","useState","onSelectionChange","item","api","current","getSelectedRows","console","log","height","width","rows","selection","newSelectionModel","length","selectionSet","Set","result","filter","s","has"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,wBAAzB;;AAEA,MAAMC,OAAO,GAAG,CACd;AAAEC,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,UAAU,EAAE;AAA3B,CADc,EAEd;AAAED,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,UAAU,EAAE;AAA7B,CAFc,EAGd;AAAED,EAAAA,KAAK,EAAE,KAAT;AAAgBC,EAAAA,UAAU,EAAE;AAA5B,CAHc,CAAhB,C,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAEvC,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,KAAK,CAACS,QAAN,CAAe,EAAf,CAA5C;;AACA,QAAMC,iBAAiB,GAAIC,IAAD,IAAU;AAC9BA,IAAAA,IAAI,CAACC,GAAL,CAASC,OAAT,CAAiBC,eAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,cAAZ;AACL,GAHD;;AAKA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEU,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,KAAK,EAAE;AAAtB,KAAZ;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEZ,KAAK,CAACa,IAAtB;AAA4B,MAAA,OAAO,EAAEjB,OAArC;AAA8C,MAAA,QAAQ,EAAE,EAAxD;AAA4D,MAAA,iBAAiB,MAA7E;AACA,MAAA,iBAAiB,MADjB;AAEA,MAAA,cAAc,EAAEK,cAFhB;AAGA,MAAA,sBAAsB,EAAGa,SAAD,IAAe;AACrC,cAAMC,iBAAiB,GAAGD,SAAS,CAACb,cAApC;;AAEA,YAAIc,iBAAiB,CAACC,MAAlB,GAA2B,CAA/B,EAAkC;AAChC,gBAAMC,YAAY,GAAG,IAAIC,GAAJ,CAAQjB,cAAR,CAArB;AACA,gBAAMkB,MAAM,GAAGJ,iBAAiB,CAACK,MAAlB,CACZC,CAAD,IAAO,CAACJ,YAAY,CAACK,GAAb,CAAiBD,CAAjB,CADK,CAAf;AAIAnB,UAAAA,iBAAiB,CAACiB,MAAD,CAAjB;AACD,SAPD,MAOO;AACLjB,UAAAA,iBAAiB,CAACa,iBAAD,CAAjB;AACD;AACF,OAhBD;AAgBG,MAAA,aAAa,EAAEX;AAhBlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GA7BuBL,S;;KAAAA,S","sourcesContent":["import * as React from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\nconst columns = [\r\n  { field: 'id', headerName: 'id'},\r\n  { field: 'name', headerName: 'name'},\r\n  { field: 'ref', headerName: 'reference'}\r\n];\r\n\r\n// const rows = [\r\n//   { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\r\n//   { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\r\n//   { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\r\n//   { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\r\n//   { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: 2 },\r\n//   { id: 6, lastName: 'Melisandre', firstName: 'dave', age: 150 },\r\n//   { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\r\n//   { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\r\n//   { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\r\n// ];\r\n\r\n// const rows = []\r\n\r\nexport default function DataTable(props) {\r\n\r\n  const [selectionModel, setSelectionModel] = React.useState([]);\r\n  const onSelectionChange = (item) => {\r\n        item.api.current.getSelectedRows()\r\n        console.log(selectionModel)\r\n  }\r\n\r\n  return (\r\n    <div style={{ height: 400, width: 500 }}>\r\n      <DataGrid rows={props.rows} columns={columns} pageSize={10} checkboxSelection\r\n      checkboxSelection\r\n      selectionModel={selectionModel}\r\n      onSelectionModelChange={(selection) => {\r\n        const newSelectionModel = selection.selectionModel;\r\n\r\n        if (newSelectionModel.length > 1) {\r\n          const selectionSet = new Set(selectionModel);\r\n          const result = newSelectionModel.filter(\r\n            (s) => !selectionSet.has(s)\r\n          );\r\n\r\n          setSelectionModel(result);\r\n        } else {\r\n          setSelectionModel(newSelectionModel);\r\n        }\r\n      }} onRowSelected={onSelectionChange}  />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
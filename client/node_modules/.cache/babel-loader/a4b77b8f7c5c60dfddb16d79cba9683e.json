{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\La mota\\\\source\\\\youtube-auth\\\\client\\\\src\\\\components\\\\SignUp.js\";\nimport React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport * as actions from '../actions';\nimport CustomInput from './CustomInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  async onSubmit(formData) {\n    console.log('onSubmit() got called');\n    console.log('formData', formData); // We need to call some action\n\n    await this.props.signUp(formData);\n  }\n\n  render() {\n    const {\n      handleSubmit\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(this.onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              name: \"email\",\n              type: \"text\",\n              id: \"email\",\n              label: \"Enter your email\",\n              placeholder: \"example@example.com\",\n              component: CustomInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              name: \"password\",\n              type: \"password\",\n              id: \"password\",\n              label: \"Enter your password\",\n              placeholder: \"example\",\n              component: CustomInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), this.props.errorMessage ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-danger\",\n            children: this.props.errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-primary\",\n            children: \"Or sign up using third-party services\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            children: \"Facebook\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            children: \"Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    errorMessage: state.auth.errorMessage\n  };\n}\n\nexport default compose(connect(mapStateToProps, actions), reduxForm({\n  form: 'signup'\n}))(SignUp);","map":{"version":3,"sources":["C:/Users/La mota/source/youtube-auth/client/src/components/SignUp.js"],"names":["React","Component","reduxForm","Field","connect","compose","actions","CustomInput","SignUp","constructor","props","onSubmit","bind","formData","console","log","signUp","render","handleSubmit","errorMessage","mapStateToProps","state","auth","form"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,YAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB;AAEA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,MAAN,SAAqBP,SAArB,CAA+B;AAC3BQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AAEa,QAARD,QAAQ,CAACE,QAAD,EAAW;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB,EAFqB,CAGrB;;AACA,UAAM,KAAKH,KAAL,CAAWM,MAAX,CAAkBH,QAAlB,CAAN;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAmB,KAAKR,KAA9B;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACI;AAAM,UAAA,QAAQ,EAAEQ,YAAY,CAAC,KAAKP,QAAN,CAA5B;AAAA,kCACI;AAAA,mCACI,QAAC,KAAD;AACI,cAAA,IAAI,EAAC,OADT;AAEI,cAAA,IAAI,EAAC,MAFT;AAGI,cAAA,EAAE,EAAC,OAHP;AAII,cAAA,KAAK,EAAC,kBAJV;AAKI,cAAA,WAAW,EAAC,qBALhB;AAMI,cAAA,SAAS,EAAEJ;AANf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAUI;AAAA,mCACI,QAAC,KAAD;AACI,cAAA,IAAI,EAAC,UADT;AAEI,cAAA,IAAI,EAAC,UAFT;AAGI,cAAA,EAAE,EAAC,UAHP;AAII,cAAA,KAAK,EAAC,qBAJV;AAKI,cAAA,WAAW,EAAC,SALhB;AAMI,cAAA,SAAS,EAAEA;AANf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAVJ,EAoBK,KAAKG,KAAL,CAAWS,YAAX,gBACG;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA,sBACK,KAAKT,KAAL,CAAWS;AADhB;AAAA;AAAA;AAAA;AAAA,kBADH,GAGY,IAvBjB,eAyBI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eA8BI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAQ,YAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAQ,YAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA9BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA0CH;;AAzD0B;;AA4D/B,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHF,IAAAA,YAAY,EAAEE,KAAK,CAACC,IAAN,CAAWH;AADtB,GAAP;AAGH;;AAED,eAAed,OAAO,CAClBD,OAAO,CAACgB,eAAD,EAAkBd,OAAlB,CADW,EAElBJ,SAAS,CAAC;AAAEqB,EAAAA,IAAI,EAAE;AAAR,CAAD,CAFS,CAAP,CAGbf,MAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\n\r\nimport * as actions from '../actions';\r\nimport CustomInput from './CustomInput';\r\n\r\nclass SignUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async onSubmit(formData) {\r\n        console.log('onSubmit() got called');\r\n        console.log('formData', formData);\r\n        // We need to call some action\r\n        await this.props.signUp(formData);\r\n    }\r\n\r\n    render() {\r\n        const { handleSubmit } = this.props;\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <form onSubmit={handleSubmit(this.onSubmit)}>\r\n                        <fieldset>\r\n                            <Field\r\n                                name=\"email\"\r\n                                type=\"text\"\r\n                                id=\"email\"\r\n                                label=\"Enter your email\"\r\n                                placeholder=\"example@example.com\"\r\n                                component={CustomInput} />\r\n                        </fieldset>\r\n                        <fieldset>\r\n                            <Field\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                label=\"Enter your password\"\r\n                                placeholder=\"example\"\r\n                                component={CustomInput} />\r\n                        </fieldset>\r\n\r\n                        {this.props.errorMessage ?\r\n                            <div className=\"alert alert-danger\">\r\n                                {this.props.errorMessage}\r\n                            </div> : null}\r\n\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Sign Up</button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <div className=\"text-center\">\r\n                        <div className=\"alert alert-primary\">\r\n                            Or sign up using third-party services\r\n                        </div>\r\n                        <button className=\"btn btn-primary\">Facebook</button>\r\n                        <button className=\"btn btn-primary\">Google</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        errorMessage: state.auth.errorMessage\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, actions),\r\n    reduxForm({ form: 'signup' })\r\n)(SignUp);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Des Brennan\\\\sources\\\\commercial-tool\\\\commercial-analytical-tool\\\\client\\\\src\\\\components\\\\EditProjectDialog.js\";\nimport React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport * as actions from '../actions';\nimport CustomInput from './CustomInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CreateProjectDialog extends Component {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  async onSubmit(formData) {\n    formData.id = this.props.selectedRow.keys().next().value;\n    await this.props.editProject(formData);\n    this.props.init();\n    this.props.handleClose();\n  }\n\n  render() {\n    const {\n      handleSubmit\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(this.onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              name: \"name\",\n              type: \"text\",\n              id: \"name\",\n              label: \"Enter project name\",\n              meta: {\n                initial: `${index + 1}`\n              },\n              value: this.props.selectedRow.get(this.props.selectedRow.keys().next().value).name,\n              component: CustomInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              name: \"ref\",\n              type: \"text\",\n              id: \"ref\",\n              label: \"Enter project refernce\",\n              placeholder: this.props.selectedRow.get(this.props.selectedRow.keys().next().value).ref,\n              component: CustomInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), this.props.errorMessage ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-danger\",\n            children: this.props.errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: \"Edit project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    errorMessage: state.auth.errorMessage\n  };\n}\n\nexport default compose(connect(mapStateToProps, actions), reduxForm({\n  form: 'createProject'\n}))(CreateProjectDialog);","map":{"version":3,"sources":["C:/Users/Des Brennan/sources/commercial-tool/commercial-analytical-tool/client/src/components/EditProjectDialog.js"],"names":["React","Component","reduxForm","Field","connect","compose","actions","CustomInput","CreateProjectDialog","constructor","props","onSubmit","bind","formData","id","selectedRow","keys","next","value","editProject","init","handleClose","render","handleSubmit","initial","index","get","name","ref","errorMessage","mapStateToProps","state","auth","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\n\r\n\r\nimport * as actions from '../actions';\r\nimport CustomInput from './CustomInput';\r\n\r\nclass CreateProjectDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async onSubmit(formData) {\r\n        formData.id = this.props.selectedRow.keys().next().value\r\n        await this.props.editProject(formData);\r\n        this.props.init()\r\n        this.props.handleClose()  \r\n    }\r\n\r\n    render() {\r\n        const { handleSubmit } = this.props;\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <form onSubmit={handleSubmit(this.onSubmit)}>\r\n                        <fieldset>\r\n                            <Field\r\n                                name=\"name\"\r\n                                type=\"text\"\r\n                                id=\"name\"\r\n                                label=\"Enter project name\"\r\n                                meta={{initial: `${index + 1}`}}\r\n                                value={this.props.selectedRow.get(this.props.selectedRow.keys().next().value).name}\r\n                                component={CustomInput} />\r\n                        </fieldset>\r\n                        <fieldset>\r\n                            <Field\r\n                                name=\"ref\"\r\n                                type=\"text\"\r\n                                id=\"ref\"\r\n                                label=\"Enter project refernce\"\r\n                                placeholder={this.props.selectedRow.get(this.props.selectedRow.keys().next().value).ref}\r\n                                component={CustomInput} />\r\n                        </fieldset>\r\n\r\n                        {this.props.errorMessage ?\r\n                            <div className=\"alert alert-danger\">\r\n                                {this.props.errorMessage}\r\n                            </div> : null}\r\n\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Edit project</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        errorMessage: state.auth.errorMessage\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, actions),\r\n    reduxForm({ form: 'createProject' })\r\n)(CreateProjectDialog);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\La mota\\\\source\\\\youtube-auth\\\\client\\\\src\\\\components\\\\HOCS\\\\authGuard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; // eslint-disable-next-line import/no-anonymous-default-export\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default (OriginalComponent => {\n  class MixedComponent extends Component {\n    componentDidMount() {\n      //Whether user is authenticated\n      if (!this.props.isAuth && !this.props.jwtToken) {\n        this.props.history.push('/');\n      }\n    }\n\n    componentDidUpdate() {\n      //Whether user is authenticated\n      if (this.props.isAuth && this.props.jwtToken) {\n        console.log('All is good, user entrance is allowed!');\n      } else {\n        console.log('User is not authenticated, access denied!');\n        this.props.history.push('/');\n      }\n    }\n\n    render() {\n      return /*#__PURE__*/_jsxDEV(OriginalComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 20\n      }, this);\n    }\n\n  }\n\n  function mapStateToProps(state) {\n    return {\n      isAuth: state.auth.isAuthenticated,\n      jwtToken: state.auth.token\n    };\n  }\n\n  return connect(mapStateToProps)(MixedComponent);\n});","map":{"version":3,"sources":["C:/Users/La mota/source/youtube-auth/client/src/components/HOCS/authGuard.js"],"names":["React","Component","connect","OriginalComponent","MixedComponent","componentDidMount","props","isAuth","jwtToken","history","push","componentDidUpdate","console","log","render","mapStateToProps","state","auth","isAuthenticated","token"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;;AACA,gBAAgBC,iBAAD,IAAuB;AAClC,QAAMC,cAAN,SAA6BH,SAA7B,CAAuC;AAEnCI,IAAAA,iBAAiB,GAAG;AAChB;AACA,UAAI,CAAC,KAAKC,KAAL,CAAWC,MAAZ,IAAsB,CAAC,KAAKD,KAAL,CAAWE,QAAtC,EAAgD;AAC5C,aAAKF,KAAL,CAAWG,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACH;AACJ;;AAEDC,IAAAA,kBAAkB,GAAG;AACjB;AACA,UAAI,KAAKL,KAAL,CAAWC,MAAX,IAAqB,KAAKD,KAAL,CAAWE,QAApC,EAA8C;AAC1CI,QAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACH,OAFD,MAEO;AACHD,QAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACA,aAAKP,KAAL,CAAWG,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACH;AACJ;;AAEDI,IAAAA,MAAM,GAAG;AACL,0BAAO,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AArBkC;;AAwBvC,WAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,WAAO;AACHT,MAAAA,MAAM,EAAES,KAAK,CAACC,IAAN,CAAWC,eADhB;AAEHV,MAAAA,QAAQ,EAAEQ,KAAK,CAACC,IAAN,CAAWE;AAFlB,KAAP;AAIH;;AAED,SAAOjB,OAAO,CAACa,eAAD,CAAP,CAAyBX,cAAzB,CAAP;AACH,CAjCD","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (OriginalComponent) => {\r\n    class MixedComponent extends Component {\r\n\r\n        componentDidMount() {\r\n            //Whether user is authenticated\r\n            if (!this.props.isAuth && !this.props.jwtToken) {\r\n                this.props.history.push('/');\r\n            }\r\n        }\r\n\r\n        componentDidUpdate() {\r\n            //Whether user is authenticated\r\n            if (this.props.isAuth && this.props.jwtToken) {\r\n                console.log('All is good, user entrance is allowed!');\r\n            } else {\r\n                console.log('User is not authenticated, access denied!');\r\n                this.props.history.push('/');\r\n            }\r\n        }\r\n\r\n        render() {\r\n            return <OriginalComponent />;\r\n        }\r\n    }\r\n\r\n    function mapStateToProps(state) {\r\n        return {\r\n            isAuth: state.auth.isAuthenticated,\r\n            jwtToken: state.auth.token\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps)(MixedComponent);\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}
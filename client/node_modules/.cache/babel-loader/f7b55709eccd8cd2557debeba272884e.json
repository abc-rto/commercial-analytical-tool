{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\La mota\\\\source\\\\youtube-auth - Copy\\\\client\\\\src\\\\components\\\\CheckBoxList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\nexport default function CheckboxList() {\n  _s();\n\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([0]);\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const onClickHandler = () => {\n    const data = new FormData();\n    data.append('file', this.state.selectedFile);\n    axios.post(\"http://localhost:5001/upload/post\", data, {// receive two    parameter endpoint url ,form data\n    }).then(res => {\n      // then print response status\n      console.log(\"invincible: \" + res.statusText);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success btn-block\",\n      onClick: this.onClickHandler,\n      children: \"Scan for inverters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Select Solar Inverters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      className: classes.root,\n      children: [0, 1, 2, 3].map(value => {\n        const labelId = `checkbox-list-label-${value}`;\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          role: undefined,\n          dense: true,\n          button: true,\n          onClick: handleToggle(value),\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              edge: \"start\",\n              checked: checked.indexOf(value) !== -1,\n              tabIndex: -1,\n              disableRipple: true,\n              inputProps: {\n                'aria-labelledby': labelId\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            id: labelId,\n            primary: `Solar Inverter ${value + 1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              edge: \"end\",\n              \"aria-label\": \"comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this)]\n        }, value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CheckboxList, \"0o+c9wVIlrEVOlS08q2btRlaiSQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = CheckboxList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxList\");","map":{"version":3,"sources":["C:/Users/La mota/source/youtube-auth - Copy/client/src/components/CheckBoxList.js"],"names":["React","makeStyles","List","ListItem","ListItemIcon","ListItemSecondaryAction","ListItemText","Checkbox","IconButton","axios","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","CheckboxList","classes","checked","setChecked","useState","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","onClickHandler","data","FormData","append","state","selectedFile","post","then","res","console","log","statusText","map","labelId","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport axios from 'axios';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\nexport default function CheckboxList() {\r\n   \r\n    const classes = useStyles();\r\n    const [checked, setChecked] = React.useState([0]);\r\n\r\n    const handleToggle = (value) => () => {\r\n        const currentIndex = checked.indexOf(value);\r\n        const newChecked = [...checked];\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value);\r\n        } else {\r\n            newChecked.splice(currentIndex, 1);\r\n        }\r\n\r\n        setChecked(newChecked);\r\n    };\r\n\r\n    const onClickHandler = () => {\r\n        const data = new FormData()\r\n        data.append('file', this.state.selectedFile)\r\n        axios.post(\"http://localhost:5001/upload/post\", data, {\r\n            // receive two    parameter endpoint url ,form data\r\n        })\r\n            .then(res => { // then print response status\r\n                console.log(\"invincible: \" + res.statusText)\r\n\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div class=\"container\">\r\n             <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.onClickHandler}>Scan for inverters</button>\r\n            <label>Select Solar Inverters</label>\r\n            <List className={classes.root}>\r\n                {[0, 1, 2, 3].map((value) => {\r\n                    const labelId = `checkbox-list-label-${value}`;\r\n                    return (\r\n                        <ListItem key={value} role={undefined} dense button onClick={handleToggle(value)}>\r\n                            <ListItemIcon>\r\n                                <Checkbox\r\n                                    edge=\"start\"\r\n                                    checked={checked.indexOf(value) !== -1}\r\n                                    tabIndex={-1}\r\n                                    disableRipple\r\n                                    inputProps={{ 'aria-labelledby': labelId }}\r\n                                />\r\n                            </ListItemIcon>\r\n                            <ListItemText id={labelId} primary={`Solar Inverter ${value + 1}`} />\r\n                            <ListItemSecondaryAction>\r\n                                <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                </IconButton>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                    );\r\n                })}\r\n            </List>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}
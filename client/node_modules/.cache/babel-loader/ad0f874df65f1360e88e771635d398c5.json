{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Des Brennan\\\\sources\\\\commercial-tool\\\\commercial-analytical-tool\\\\client\\\\src\\\\components\\\\DataTable.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport qs from 'qs';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport EditProjectDialog from './EditProjectDialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DataTable(props) {\n  _s();\n\n  const [openEdit, setOpenEdit] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const [selectedRow, setSelectedRow] = React.useState({});\n  const [init] = React.useState(this.init);\n\n  const renderEditButton = params => {\n    const handleClickOpen = () => {\n      setOpenEdit(true);\n    };\n\n    const handleClose = () => {\n      setOpenEdit(false);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          onClick: handleClickOpen,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n          open: openEdit,\n          onClose: handleClose,\n          \"aria-labelledby\": \"form-dialog-title\",\n          children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n            children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n              children: \"Edit project details and submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(EditProjectDialog, {\n              init: this.init,\n              selectedRow: selectedRow,\n              handleClose: handleClose\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClose,\n              color: \"primary\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderDeleteButton = params => {\n    const handleClickOpen = () => {\n      setOpenDelete(true);\n    };\n\n    const handleClose = () => {\n      setOpenDelete(false);\n    };\n\n    const onDelete = async () => {\n      console.log(params.row.id);\n      await axios.get('http://localhost:5001/projects/delete', {\n        params: {\n          id: params.row.id\n        },\n        paramsSerializer: params => {\n          return qs.stringify(params);\n        }\n      }).then(res => res.data);\n      props.init();\n      handleClose();\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          onClick: handleClickOpen,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n          open: openDelete,\n          onClose: handleClose,\n          \"aria-labelledby\": \"form-dialog-title\",\n          children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n            children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n              children: \"Are you sure?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              size: \"small\",\n              style: {\n                marginLeft: 16\n              },\n              onClick: onDelete,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClose,\n              color: \"primary\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  };\n\n  const columns = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 150\n  }, {\n    field: 'name',\n    headerName: 'Name',\n    width: 150\n  }, {\n    field: 'ref',\n    headerName: 'Reference',\n    width: 150\n  }, {\n    field: 'delete',\n    headerName: 'Delete',\n    width: 150,\n    renderCell: renderDeleteButton,\n    disableClickEventBubbling: true\n  }, {\n    field: 'edit',\n    headerName: 'Edit',\n    width: 150,\n    renderCell: renderEditButton,\n    disableClickEventBubbling: true\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400,\n      width: 700\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      onRowSelected: x => setSelectedRow(x.api.current.getSelectedRows()),\n      rows: props.rows,\n      columns: columns,\n      pageSize: 10\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DataTable, \"untwwvfqcQNuOblzILfYaIH1Lxk=\");\n\n_c = DataTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"sources":["C:/Users/Des Brennan/sources/commercial-tool/commercial-analytical-tool/client/src/components/DataTable.js"],"names":["React","DataGrid","Button","axios","qs","Dialog","DialogActions","DialogContent","DialogContentText","EditProjectDialog","DataTable","props","openEdit","setOpenEdit","useState","openDelete","setOpenDelete","selectedRow","setSelectedRow","init","renderEditButton","params","handleClickOpen","handleClose","renderDeleteButton","onDelete","console","log","row","id","get","paramsSerializer","stringify","then","res","data","marginLeft","columns","field","headerName","width","renderCell","disableClickEventBubbling","height","x","api","current","getSelectedRows","rows"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport qs from 'qs';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\n\r\n\r\nimport EditProjectDialog from './EditProjectDialog';\r\n\r\nexport default function DataTable(props) {\r\n\r\n  const [openEdit, setOpenEdit] = React.useState(false);\r\n  const [openDelete, setOpenDelete] = React.useState(false);\r\n  const [selectedRow, setSelectedRow] = React.useState({})\r\n  const [init] = React.useState(this.init)\r\n\r\n\r\n  const renderEditButton = (params) => {\r\n\r\n    const handleClickOpen = () => {\r\n      setOpenEdit(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n      setOpenEdit(false);\r\n    };\r\n\r\n    return (\r\n      <strong>\r\n        <div>\r\n          <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n            Edit\r\n          </Button>\r\n          <Dialog open={openEdit} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n            <DialogContent>\r\n              <DialogContentText>\r\n                Edit project details and submit\r\n              </DialogContentText>\r\n              <EditProjectDialog init={this.init} selectedRow={selectedRow} handleClose={handleClose}></EditProjectDialog>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n      </strong>\r\n    )\r\n  }\r\n\r\n  const renderDeleteButton = (params) => {\r\n\r\n    const handleClickOpen = () => {\r\n      setOpenDelete(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n      setOpenDelete(false);\r\n    };\r\n\r\n    const onDelete = async () => {\r\n      console.log(params.row.id)\r\n      await axios.get('http://localhost:5001/projects/delete', {\r\n        params: {\r\n          id: params.row.id\r\n        },\r\n        paramsSerializer: params => {\r\n          return qs.stringify(params)\r\n        }\r\n      }).then(res => res.data);\r\n\r\n      props.init()\r\n      handleClose()\r\n    }\r\n\r\n    return (\r\n      <strong>\r\n        <div>\r\n          <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n            Delete\r\n          </Button>\r\n          <Dialog open={openDelete} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n            <DialogContent>\r\n              <DialogContentText>\r\n                Are you sure?\r\n              </DialogContentText>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                style={{ marginLeft: 16 }}\r\n                onClick={onDelete}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n      </strong>\r\n    )\r\n  }\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: 'ID', width: 150 },\r\n    { field: 'name', headerName: 'Name', width: 150 },\r\n    { field: 'ref', headerName: 'Reference', width: 150 },\r\n    {\r\n      field: 'delete',\r\n      headerName: 'Delete',\r\n      width: 150,\r\n      renderCell: renderDeleteButton,\r\n      disableClickEventBubbling: true,\r\n    },\r\n    {\r\n      field: 'edit',\r\n      headerName: 'Edit',\r\n      width: 150,\r\n      renderCell: renderEditButton,\r\n      disableClickEventBubbling: true,\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div style={{ height: 400, width: 700 }}>\r\n      <DataGrid onRowSelected={(x) => setSelectedRow(x.api.current.getSelectedRows()) } rows={props.rows} columns={columns} pageSize={10} />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
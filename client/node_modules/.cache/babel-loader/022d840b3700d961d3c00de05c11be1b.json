{"ast":null,"code":"import axios from 'axios';\nimport { AUTH_SIGN_UP, AUTH_SIGN_IN, AUTH_SIGN_OUT, AUTH_ERROR, DASHBOARD_GET_DATA, NEW_PROJECT, DELETE_PROJECT, UPDATE_PROJECT } from './types';\n/*\r\nActionCreators -> create/return Actions ({ }) -> dispatched -> middlewares -> reducers\r\n*/\n\nexport const signUp = data => {\n  /*\r\n      Step 1) Use the data and to make HTTP request to our BE abd send it along [x]\r\n      Step 2) Take BE response (jwtToken is hee now!) [x]\r\n      Step 3) Dispatch 'user just signed up' (with jwtToken)[x]\r\n      Step 4) Save the jwtToken into our localStorage[x]\r\n  */\n  return async dispatch => {\n    try {\n      console.log('[ActionCreator] signUp called!');\n      const res = await axios.post('http://localhost:5001/users/signup', data);\n      console.log('[ActionCreator] signUp dispatched an action!');\n      dispatch({\n        type: AUTH_SIGN_UP,\n        payload: res.data.token\n      });\n      localStorage.setItem('JWT_TOKEN', res.data.token);\n      axios.defaults.headers.common['authorize'] = res.data.token;\n      ;\n    } catch (error) {\n      dispatch({\n        type: AUTH_ERROR,\n        payload: 'Email is already in use'\n      });\n    }\n  };\n};\nexport const signIn = data => {\n  /*\r\n       Step 1) Use the data and to make HTTP request to our BE abd send it along [x]\r\n       Step 2) Take BE response (jwtToken is hee now!) [x]\r\n       Step 3) Dispatch 'user just signed up' (with jwtToken)[x]\r\n       Step 4) Save the jwtToken into our localStorage[x]\r\n   */\n  return async dispatch => {\n    try {\n      const res = await axios.post('http://localhost:5001/users/signin', data);\n      dispatch({\n        type: AUTH_SIGN_IN,\n        payload: res.data.token\n      });\n      localStorage.setItem('JWT_TOKEN', res.data.token);\n      axios.defaults.headers.common['authorize'] = res.data.token;\n    } catch (error) {\n      dispatch({\n        type: AUTH_ERROR,\n        payload: 'Email and password combination is not valid'\n      });\n    }\n  };\n};\nexport const getSecret = () => {\n  return async dispatch => {\n    try {\n      console.log('[ActionCreator] Trying to get BE\\'s secret!');\n      const res = await axios.get('http://localhost:5001/users/secret');\n      console.log('res', res);\n      dispatch({\n        type: DASHBOARD_GET_DATA,\n        payload: res.data.secret\n      });\n    } catch (error) {\n      console.error('error', error);\n    }\n  };\n};\nexport const signOut = () => {\n  return dispatch => {\n    localStorage.removeItem(\"JWT_TOKEN\");\n    axios.defaults.headers.common['authorize'] = '';\n    dispatch({\n      type: AUTH_SIGN_OUT,\n      payload: ''\n    });\n  };\n};\nexport const getInverterData = () => {\n  return async dispatch => {\n    try {\n      const res = await axios.get('http://localhost:5001/post/inverters').then(res => res.data); //const dataPromise = res.then((response) => response.data)\n      //console.log(res);\n      //console.log('ID: ', res[0].id, 'Name: ', res[0].name);\n      // res.forEach(element => {\n      //     result.push(element);\n      // });\n      //console.log(res);\n\n      dispatch({\n        type: DASHBOARD_GET_DATA,\n        payload: res\n      });\n      return res;\n    } catch (error) {\n      console.error('error', error);\n    }\n  };\n};\nexport const createProject = data => {\n  /*\r\n      Step 1) Use the data and to make HTTP request to our BE abd send it along [x]\r\n      Step 2) Take BE response (jwtToken is hee now!) [x]\r\n      Step 3) Dispatch 'user just signed up' (with jwtToken)[x]\r\n      Step 4) Save the jwtToken into our localStorage[x]\r\n  */\n  return async dispatch => {\n    try {\n      const res = await axios.post('http://localhost:5001/projects/create', data);\n      dispatch({\n        type: NEW_PROJECT,\n        payload: res.data.success\n      });\n    } catch (error) {\n      dispatch({\n        type: AUTH_ERROR,\n        payload: 'Project already exists'\n      });\n    }\n  };\n};\nexport const editProject = (id, data) => {\n  console.log(data);\n  return async dispatch => {\n    try {\n      const res = await axios.get('http://localhost:5001/projects/update', data);\n      dispatch({\n        type: UPDATE_PROJECT,\n        payload: res.data.success\n      });\n    } catch (error) {\n      dispatch({\n        type: AUTH_ERROR,\n        payload: 'Error'\n      });\n    }\n  };\n};\nexport const deleteProject = data => {\n  return async dispatch => {\n    try {\n      const res = await axios.get('http://localhost:5001/projects/delete', data);\n      dispatch({\n        type: DELETE_PROJECT,\n        payload: res.data.success\n      });\n    } catch (error) {\n      dispatch({\n        type: AUTH_ERROR,\n        payload: 'Error'\n      });\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/Des Brennan/sources/commercial-tool/commercial-analytical-tool/client/src/actions/index.js"],"names":["axios","AUTH_SIGN_UP","AUTH_SIGN_IN","AUTH_SIGN_OUT","AUTH_ERROR","DASHBOARD_GET_DATA","NEW_PROJECT","DELETE_PROJECT","UPDATE_PROJECT","signUp","data","dispatch","console","log","res","post","type","payload","token","localStorage","setItem","defaults","headers","common","error","signIn","getSecret","get","secret","signOut","removeItem","getInverterData","then","createProject","success","editProject","id","deleteProject"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { AUTH_SIGN_UP, AUTH_SIGN_IN, AUTH_SIGN_OUT, AUTH_ERROR, DASHBOARD_GET_DATA, NEW_PROJECT, DELETE_PROJECT, UPDATE_PROJECT } from './types'\r\n\r\n/*\r\nActionCreators -> create/return Actions ({ }) -> dispatched -> middlewares -> reducers\r\n*/\r\n\r\nexport const signUp = data => {\r\n    /*\r\n        Step 1) Use the data and to make HTTP request to our BE abd send it along [x]\r\n        Step 2) Take BE response (jwtToken is hee now!) [x]\r\n        Step 3) Dispatch 'user just signed up' (with jwtToken)[x]\r\n        Step 4) Save the jwtToken into our localStorage[x]\r\n    */\r\n\r\n    return async dispatch => {\r\n        try {\r\n            console.log('[ActionCreator] signUp called!');\r\n            const res = await axios.post('http://localhost:5001/users/signup', data);\r\n\r\n            console.log('[ActionCreator] signUp dispatched an action!');\r\n            dispatch({\r\n                type: AUTH_SIGN_UP,\r\n                payload: res.data.token\r\n            });\r\n\r\n            localStorage.setItem('JWT_TOKEN', res.data.token);\r\n            axios.defaults.headers.common['authorize'] = res.data.token;;\r\n\r\n        } catch (error) {\r\n            dispatch({\r\n                type: AUTH_ERROR,\r\n                payload: 'Email is already in use'\r\n            })\r\n        }\r\n\r\n\r\n    };\r\n}\r\n\r\nexport const signIn = data => {\r\n    /*\r\n         Step 1) Use the data and to make HTTP request to our BE abd send it along [x]\r\n         Step 2) Take BE response (jwtToken is hee now!) [x]\r\n         Step 3) Dispatch 'user just signed up' (with jwtToken)[x]\r\n         Step 4) Save the jwtToken into our localStorage[x]\r\n     */\r\n\r\n    return async dispatch => {\r\n        try {\r\n            const res = await axios.post('http://localhost:5001/users/signin', data);\r\n\r\n            dispatch({\r\n                type: AUTH_SIGN_IN,\r\n                payload: res.data.token\r\n            });\r\n\r\n            localStorage.setItem('JWT_TOKEN', res.data.token);\r\n            axios.defaults.headers.common['authorize'] = res.data.token;\r\n        } catch (error) {\r\n            dispatch({\r\n                type: AUTH_ERROR,\r\n                payload: 'Email and password combination is not valid'\r\n            })\r\n        }\r\n    };\r\n}\r\n\r\nexport const getSecret = () => {\r\n    return async dispatch => {\r\n        try {\r\n            console.log('[ActionCreator] Trying to get BE\\'s secret!');\r\n            const res = await axios.get('http://localhost:5001/users/secret');\r\n            console.log('res', res);\r\n\r\n            dispatch({\r\n                type: DASHBOARD_GET_DATA,\r\n                payload: res.data.secret\r\n            })\r\n\r\n        } catch (error) {\r\n            console.error('error', error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return dispatch => {\r\n        localStorage.removeItem(\"JWT_TOKEN\");\r\n        axios.defaults.headers.common['authorize'] = '';\r\n        dispatch({\r\n            type: AUTH_SIGN_OUT,\r\n            payload: ''\r\n        });\r\n\r\n    };\r\n}\r\n\r\nexport const getInverterData = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await axios.get('http://localhost:5001/post/inverters').then(res => res.data);\r\n            //const dataPromise = res.then((response) => response.data)\r\n            //console.log(res);\r\n            //console.log('ID: ', res[0].id, 'Name: ', res[0].name);\r\n            // res.forEach(element => {\r\n            //     result.push(element);\r\n            // });\r\n            //console.log(res);\r\n\r\n            dispatch({\r\n                type: DASHBOARD_GET_DATA,\r\n                payload: res\r\n            })\r\n\r\n            return res;\r\n\r\n        } catch (error) {\r\n            console.error('error', error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const createProject = data => {\r\n    /*\r\n        Step 1) Use the data and to make HTTP request to our BE abd send it along [x]\r\n        Step 2) Take BE response (jwtToken is hee now!) [x]\r\n        Step 3) Dispatch 'user just signed up' (with jwtToken)[x]\r\n        Step 4) Save the jwtToken into our localStorage[x]\r\n    */\r\n\r\n    return async dispatch => {\r\n        try {\r\n            const res = await axios.post('http://localhost:5001/projects/create', data);\r\n            dispatch({\r\n                type: NEW_PROJECT,\r\n                payload: res.data.success\r\n            });\r\n\r\n        } catch (error) {\r\n            dispatch({\r\n                type: AUTH_ERROR,\r\n                payload: 'Project already exists'\r\n            })\r\n        }\r\n\r\n    };\r\n}\r\n\r\nexport const editProject = (id, data) => {\r\n\r\n    console.log(data)\r\n\r\n    return async dispatch => {\r\n        try {\r\n            const res = await axios.get('http://localhost:5001/projects/update', data);\r\n            dispatch({\r\n                type: UPDATE_PROJECT,\r\n                payload: res.data.success\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: AUTH_ERROR,\r\n                payload: 'Error'\r\n            })\r\n        }\r\n\r\n    };\r\n}\r\n\r\nexport const deleteProject = data => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await axios.get('http://localhost:5001/projects/delete', data);\r\n            dispatch({\r\n                type: DELETE_PROJECT,\r\n                payload: res.data.success\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: AUTH_ERROR,\r\n                payload: 'Error'\r\n            })\r\n        }\r\n\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Des Brennan\\\\sources\\\\commercial-tool\\\\commercial-analytical-tool\\\\client\\\\src\\\\components\\\\DataTable.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport qs from 'qs';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport CustomInput from './CustomInput';\nimport { reduxForm, Field } from 'redux-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DataTable(props) {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n\n  const renderEditButton = params => {\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n\n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    const onEdit = async formData => {\n      await axios.get('http://localhost:5001/projects/edit', formData).then(res => res.data);\n      props.init();\n      handleClose();\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          onClick: handleClickOpen,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n          open: open,\n          onClose: handleClose,\n          \"aria-labelledby\": \"form-dialog-title\",\n          children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n            children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n              children: \"Edit project details and submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col\",\n                children: /*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: this.onEdit,\n                  children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n                    children: /*#__PURE__*/_jsxDEV(Field, {\n                      name: \"name\",\n                      type: \"text\",\n                      id: \"name\",\n                      label: \"Enter project name\",\n                      placeholder: \"{params.row.name}\",\n                      component: CustomInput\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 48,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n                    children: /*#__PURE__*/_jsxDEV(Field, {\n                      name: \"ref\",\n                      type: \"text\",\n                      id: \"ref\",\n                      label: \"Enter project refernce\",\n                      placeholder: \"pro-001\",\n                      component: CustomInput\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 57,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 25\n                  }, this), this.props.errorMessage ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"alert alert-danger\",\n                    children: this.props.errorMessage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 29\n                  }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"btn btn-primary\",\n                    children: \"Edit project\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClose,\n              color: \"primary\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderDeleteButton = params => {\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n\n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    const onDelete = async () => {\n      console.log(params.row.id);\n      await axios.get('http://localhost:5001/projects/delete', {\n        params: {\n          id: params.row.id\n        },\n        paramsSerializer: params => {\n          return qs.stringify(params);\n        }\n      }).then(res => res.data);\n      props.init();\n      handleClose();\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          onClick: handleClickOpen,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n          open: open,\n          onClose: handleClose,\n          \"aria-labelledby\": \"form-dialog-title\",\n          children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n            children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n              children: \"Are you sure?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              size: \"small\",\n              style: {\n                marginLeft: 16\n              },\n              onClick: onDelete,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClose,\n              color: \"primary\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this);\n  };\n\n  const columns = [{\n    field: 'id',\n    headerName: 'id',\n    width: 150\n  }, {\n    field: 'name',\n    headerName: 'name',\n    width: 150\n  }, {\n    field: 'ref',\n    headerName: 'reference',\n    width: 150\n  }, {\n    field: ' ',\n    headerName: ' ',\n    width: 150,\n    renderCell: renderDeleteButton,\n    disableClickEventBubbling: true\n  }, {\n    field: ' ',\n    headerName: ' ',\n    width: 150,\n    renderCell: renderEditButton,\n    disableClickEventBubbling: true\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400,\n      width: 500\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: props.rows,\n      columns: columns,\n      pageSize: 10\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DataTable, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c = DataTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"sources":["C:/Users/Des Brennan/sources/commercial-tool/commercial-analytical-tool/client/src/components/DataTable.js"],"names":["React","DataGrid","Button","axios","qs","Dialog","DialogActions","DialogContent","DialogContentText","CustomInput","reduxForm","Field","DataTable","props","open","setOpen","useState","renderEditButton","params","handleClickOpen","handleClose","onEdit","formData","get","then","res","data","init","errorMessage","renderDeleteButton","onDelete","console","log","row","id","paramsSerializer","stringify","marginLeft","columns","field","headerName","width","renderCell","disableClickEventBubbling","height","rows"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport qs from 'qs';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport CustomInput from './CustomInput';\r\nimport { reduxForm, Field } from 'redux-form';\r\n\r\nexport default function DataTable(props) {\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const renderEditButton = (params) => {\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    const onEdit = async (formData) => {\r\n      await axios.get('http://localhost:5001/projects/edit', formData).then(res => res.data);\r\n      props.init()\r\n      handleClose()\r\n    }\r\n\r\n    return (\r\n      <strong>\r\n        <div>\r\n          <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n            Edit\r\n          </Button>\r\n          <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n            <DialogContent>\r\n              <DialogContentText>\r\n                Edit project details and submit\r\n              </DialogContentText>\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <form onSubmit={this.onEdit}>\r\n                        <fieldset>\r\n                            <Field\r\n                                name=\"name\"\r\n                                type=\"text\"\r\n                                id=\"name\"\r\n                                label=\"Enter project name\"\r\n                                placeholder='{params.row.name}'\r\n                                component={CustomInput} />\r\n                        </fieldset>\r\n                        <fieldset>\r\n                            <Field\r\n                                name=\"ref\"\r\n                                type=\"text\"\r\n                                id=\"ref\"\r\n                                label=\"Enter project refernce\"\r\n                                placeholder=\"pro-001\"\r\n                                component={CustomInput} />\r\n                        </fieldset>\r\n\r\n                        {this.props.errorMessage ?\r\n                            <div className=\"alert alert-danger\">\r\n                                {this.props.errorMessage}\r\n                            </div> : null}\r\n\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Edit project</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n      </strong>\r\n    )\r\n  }\r\n\r\n  const renderDeleteButton = (params) => {\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    const onDelete = async () => {\r\n      console.log(params.row.id)\r\n      await axios.get('http://localhost:5001/projects/delete', {\r\n        params: {\r\n          id: params.row.id\r\n        },\r\n        paramsSerializer: params => {\r\n          return qs.stringify(params)\r\n        }\r\n      }).then(res => res.data);\r\n\r\n      props.init()\r\n      handleClose()\r\n    }\r\n\r\n    return (\r\n      <strong>\r\n        <div>\r\n          <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n            Delete\r\n          </Button>\r\n          <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n            <DialogContent>\r\n              <DialogContentText>\r\n                Are you sure?\r\n              </DialogContentText>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                style={{ marginLeft: 16 }}\r\n                onClick={onDelete}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n      </strong>\r\n    )\r\n  }\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: 'id', width: 150 },\r\n    { field: 'name', headerName: 'name', width: 150 },\r\n    { field: 'ref', headerName: 'reference', width: 150 },\r\n    {\r\n      field: ' ',\r\n      headerName: ' ',\r\n      width: 150,\r\n      renderCell: renderDeleteButton,\r\n      disableClickEventBubbling: true,\r\n    },\r\n    {\r\n      field: ' ',\r\n      headerName: ' ',\r\n      width: 150,\r\n      renderCell: renderEditButton,\r\n      disableClickEventBubbling: true,\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div style={{ height: 400, width: 500 }}>\r\n      <DataGrid rows={props.rows} columns={columns} pageSize={10} />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}